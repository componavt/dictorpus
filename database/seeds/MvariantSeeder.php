<?php

use Illuminate\Database\Seeder;

use App\Library\Experiments\Mvariant;

class MvariantSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        $variants = [
            1=> [
                 1=>['ua', '^C*ua'],
                 2=>['oa', '^C*oa'],
                 3=>['аа', '^C*aa'],
                 4=>['oo', '^C*oo'],
                 5=>['uo', '^C*uo']],
            2=> [
                 6=>['iä', '^C*iä'],
                 7=>['eä', '^C*eä'],
                 8=>['ee', '^C*ee'],
                 9=>['ää', '^C*ää'],
                 10=>['ie', '^C*ie']],
            3=> [
                 11=>['VkV, VtV, VpV', 'V[ktp]V'], 
                 12=>['VgV, VdV, VbV', 'V[gdb]V']],
            4=> [
                 13=>['lkV, ltV, lpV, rkV, rtV, rpV, nkV, ntV', '[lrn][ktp]V'],
                 14=>['lgV, ldV, lbV, rgV, rdV, rbV, ngV, ndV', '[lrn][gbd]V']],
            5=> [
                 15=>['VzV / VžV', 'V[zž]V'],
                 16=>['VsV / VšV', 'V[sš]V']],
            6=> [
                 17=>['Visk / Višk, Vist / Višt', '^C*Vi[sš][kt]'],
                 18=>['отсутствие Visk / Višk, Vist / Višt', '']], //!^C*Vi[sš][kt]
            7=> [ // во втором слоге и далее в слове
                 19=>['VinV', '^C*(V+C+){1,}VinV'],
                 20=>['отсутствие VinV', '']], // !VinV
            8=> [ // в третьем слоге слова и далее в слове
                 21=>['VinV', '^C*(V+C+){2,}VinV'],
                 22=>['отсутствие VinV', '']], //!VinV
            9=> [
                 23=>['Vin', 'Vin$'],
                 24=>['отсутствие Vin', '']], //!Vin$
            10=> [
                 25=>['Coi / Cöi', 'C[oö]i$'],
                 26=>['Cuoi / Cyöi', 'C[uy][oö]i$'],
                 27=>['Cuo / Cyö', 'C[uy][oö]$'],
                 28=>['Cuu', 'Cuu$'],
                 29=>['отсутствие Coi / Cöi, Cuoi / Cyöi, Cuo / Cyö, Cuu', '']], // C[uy]?[oö]i?$|Cuu$
            11=> [ // в третьем слоге
                 30=>['Vize / Vise', '^C*(V+C+){2}Vi[zs]e'],
                 31=>['отсутствие Vize / Vise', '']], // !Vi[zs]e
            12=> [ // в четвертом слоге
                 32=>['Vize / Vise', '^C*(V+C+){3}Vi[zs]e'],
                 33=>['отсутствие Vize / Vise', '']], // !Vi[zs]e
            13=> [ // в третьем слоге и далее в слове
                 34=>['Vist / Višt', '^C*(V+C+){3,}Vi[sš]t'],
                 35=>['отсутствие Vist / Višt', '']], // !Vi[sš]t
            14=> [
                 36=>['наличие в абсолютном конце слова СС', 'СС$'],
                 37=>['отсутствие в абсолютном конце слова СС', '!СС$']],
            15=> [
                 38=>['Наличие возможности использования в рамках одного слова переднерядных (ä, ö, y) и заднерядных (a, o, u) гласных', '[äöy]&[aou]'],
                 39=>['Отсутствие возможности использования в рамках одного слова переднерядных (ä, ö, y) и заднерядных (a, o, u) гласных', '']], // ![äöy]&[aou]
/*            16=> [
                 40=>['наличие d’ в начале слова', '^d’'], 
                 41=>['отсутствие d’ в начале слова', '']], // !^d’
            17=> [
                 42=>['наличие d’d’ в середине слова', '^.*V+.*d’d’'], 
                 43=>['отсутствие d’d’ в середине слова', '']], // !^.*V+.*d’d’
            18=> [
                 44=>['наличие Сd’ в середине слова', '^.*V+.*Cd’'],
                 45=>['отсутствие Сd’ в середине слова', '']], // !^.*V+.*Cd’
 */
            19=> [
                 46=>['nh', 'nh'],
                 47=>['hn', 'hn']],
            20=> [
                 48=>['наличие Сkk, Cpp, Ctt', 'С[kpt]{2}'],
                 49=>['отсутствие Сkk, Cpp, Ctt', '']], // !С[kpt]{2}
            21=> [
                 50=>['ša/šo/šu', '^š[aou]'],
                 51=>['sa/so/su', '^s[aou]']],
            22=> [
                 52=>['šä/še', '^š[äe]'],
                 53=>['sä/se', '^s[äe]']],
            23=> [
                 54=>['ši', '^ši'],
                 55=>['si', '^si']],
            24=> [
                 56=>['is', 'is$'],
                 57=>['iš', 'iš$']],
            25=> [
                 58=>['aš/oš/uš', '[aou]š$'],
                 59=>['as/os/us', '[aou]s$']],
            26=> [
                 60=>['Наличие сс', 'cc'],
                 61=>['Отсутствие сс', '']], // !cc
            27=> [
                 62=>['Наличие nnu/nny в конце слова', 'nn[uy]$'],
                 63=>['Отсутствие nnu/nny в конце слова', '']], // !nn[uy]$
            28=> [
                 64=>['Наличие kse/kše в конце слова', 'k[sš]e$'],
                 65=>['Наличие ksi/kši в конце слова', 'k[sš]i$'],
                 66=>['Наличие ks/kš в конце слова', 'k[sš]$']],
            29=> [
                 67=>['mie / šie / šie', '^[mš]ie$'],
                 68=>['minä / sinä', '^[ms]inä$'],
                 69=>['mia / sia', '^[ms]ia$']],
            30=> [
                 70=>['hiän / heän / heen', '^h[ie]än$|^heen$'],
                 71=>['häin / häi', '^häin?$'],
                 72=>['hän', '^hän$']],
            31=> [
                 73=>['наличие на конце слова mmo / mmö, tto / ttö', '[mt][oö]$'],
//                 74=>['наличие на конце слова mmo / mmö, tto / ttö', ''],
                 75=>['наличие на конце слова mm, tt', '[mt]$']]
        ];
//dd($variants);
        foreach ($variants as $marker_id => $marker) {
            foreach ($marker as $id => $info) {
                Mvariant::create(['id'=>$id, 'dmarker_id'=>$marker_id, 'name' => $info[0], 'template' => $info[1]]);
            }
        }
    }
}
